define("tiny_media/embed/mediahandler",["exports","../selectors","./mediainsert","./mediahelpers","../helpers","../propertysetter","editor_tiny/utils"],(function(_exports,_selectors,_mediainsert,_mediahelpers,_helpers,_propertysetter,_utils){var obj;function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.MediaHandler=void 0,_selectors=(obj=_selectors)&&obj.__esModule?obj:{default:obj};class MediaHandler extends _propertysetter.PropertySetter{constructor(data){super(data),_defineProperty(this,"loadTemplatePromise",(templateContext=>{templateContext.elementid=this.editor.id,templateContext.bodyTemplate=_selectors.default.EMBED.template.body.insertMediaBody,templateContext.footerTemplate=_selectors.default.EMBED.template.footer.insertMediaFooter,templateContext.selector="EMBED",Promise.all([(0,_helpers.body)(templateContext,this.root),(0,_helpers.footer)(templateContext,this.root)]).then((()=>{new _mediainsert.MediaInsert(this).init()})).catch((error=>{window.console.log(error)}))})),_defineProperty(this,"resetUploadForm",(()=>{this.mediaType=null,this.loadTemplatePromise((0,_mediahelpers.insertMediaTemplateContext)(this))})),_defineProperty(this,"loadMediaPreview",(url=>{new _mediainsert.MediaInsert(this).loadMediaPreview(url)})),_defineProperty(this,"clickHandler",(async e=>{if(e.target.closest(_selectors.default.EMBED.actions.mediaBrowser)){e.preventDefault();const params=await(0,_utils.displayFilepicker)(this.editor,"media");this.trackFilePickerCallback(params)}e.target.closest(_selectors.default.EMBED.actions.addUrl)&&this.urlChanged()})),_defineProperty(this,"registerEventListeners",(async modal=>{await modal.getBody();const root=modal.getRoot()[0];this.canShowFilePickerTrack&&root.addEventListener("click",this.clickHandler.bind(this)),root.addEventListener("input",(e=>{const urlEle=e.target.closest(_selectors.default.EMBED.elements.fromUrl);urlEle&&this.toggleUrlButton(urlEle)}))}))}urlChanged(){(0,_helpers.hideElements)(_selectors.default.EMBED.elements.urlWarning,this.root);const url=this.root.querySelector(_selectors.default.EMBED.elements.fromUrl).value;url&&url!==this.currentUrl&&this.loadMediaPreview(url)}trackFilePickerCallback(params){""!==params.url&&this.loadMediaPreview(params.url)}toggleUrlButton(input){const url=input.value;this.root.querySelector(_selectors.default.EMBED.actions.addUrl).disabled=!(""!==url&&(0,_helpers.isValidUrl)(url))}}_exports.MediaHandler=MediaHandler}));

//# sourceMappingURL=mediahandler.min.js.map