{"version":3,"file":"embed.min.js","sources":["../src/embed.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media plugin Embed class for Moodle.\n *\n * @module      tiny_media/embed\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport EmbedModal from './embedmodal';\nimport {getEmbedPermissions} from './options';\nimport {getFilePicker} from 'editor_tiny/options';\nimport {insertMediaTemplateContext} from './embed/mediahelpers';\nimport {MediaHandler} from './embed/mediahandler';\n\nexport default class MediaEmbed {\n    editor = null;\n    canShowFilePicker = false;\n    canShowFilePickerTrack = false;\n\n    constructor(editor) {\n        const permissions = getEmbedPermissions(editor);\n        const options = getFilePicker(editor, 'media');\n\n        // Indicates whether the file picker can be shown.\n        this.canShowFilePicker = permissions.filepicker && (typeof options !== 'undefined');\n        this.canShowFilePickerTrack = permissions.filepicker && (typeof getFilePicker(editor, 'subtitle') !== 'undefined');\n        this.canShowDropZone = Object.values(options.repositories).some(repository => repository.type === 'upload');\n        this.editor = editor;\n    }\n\n    displayDialogue = async() => {\n        this.currentModal = await EmbedModal.create();\n        this.root = this.currentModal.getRoot()[0];\n\n        const mediaHandler = new MediaHandler(this);\n        mediaHandler.loadTemplatePromise(insertMediaTemplateContext(this));\n    };\n}\n"],"names":["constructor","editor","async","currentModal","EmbedModal","create","root","this","getRoot","MediaHandler","loadTemplatePromise","permissions","options","canShowFilePicker","filepicker","canShowFilePickerTrack","canShowDropZone","Object","values","repositories","some","repository","type"],"mappings":"8iBAkCIA,YAAYC,sCAJH,gDACW,kDACK,2CAaPC,eACTC,mBAAqBC,oBAAWC,cAChCC,KAAOC,KAAKJ,aAAaK,UAAU,GAEnB,IAAIC,2BAAaF,MACzBG,qBAAoB,4CAA2BH,gBAftDI,aAAc,gCAAoBV,QAClCW,SAAU,2BAAcX,OAAQ,cAGjCY,kBAAoBF,YAAYG,iBAAkC,IAAZF,aACtDG,uBAAyBJ,YAAYG,iBAA4D,KAAtC,2BAAcb,OAAQ,iBACjFe,gBAAkBC,OAAOC,OAAON,QAAQO,cAAcC,MAAKC,YAAkC,WAApBA,WAAWC,YACpFrB,OAASA"}